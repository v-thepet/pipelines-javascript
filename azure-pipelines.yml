trigger:
- main

pool:
  vmImage: ubuntu-latest

jobs:  
  - job: Build
    displayName: Build
    steps:
    - task: UseNode@1
      inputs:
        version: '16.x'
      displayName: 'Install Node.js'
    - script: |
        npm install
        npm run build --if-present
        npm run test --if-present
      displayName: 'npm install, build and test'
    - task: ArchiveFiles@2
      displayName: 'Archive files'
      inputs:
        rootFolderOrFile: '$(System.DefaultWorkingDirectory)'
        includeRootFolder: false
        archiveType: zip
        archiveFile: $(Build.ArtifactStagingDirectory)/$(Build.BuildId).zip
        replaceExistingArchive: true
    - upload: $(Build.ArtifactStagingDirectory)/$(Build.BuildId).zip
      artifact: drop

  - deployment: VMDeploy
    displayName: Web deploy
    dependsOn: Build
    condition: succeeded()
    environment:
      name:  linux-qs-js
      resourceType: VirtualMachine
    strategy:
      rolling:
        maxParallel: 2  #for percentages, mention as x%
        preDeploy:
          steps:
          - download: current
            artifact: drop
          - script: echo initialize, cleanup, backup, install certs
        deploy:
          steps:
          # Modify deployment code based on the app type
          - task: CopyFiles@2
            inputs:
              SourceFolder: '$(Pipeline.Workspace)/drop/'
              Contents: '$(Build.BuildId).zip'
              TargetFolder: '$(Build.SourcesDirectory)/app/'

          - script: sudo apt update && sudo apt upgrade

          - script: sudo apt install unzip
          
          - task: ExtractFiles@1
            inputs:
             archiveFilePatterns: '$(Build.SourcesDirectory)/app/$(Build.BuildId).zip'
             destinationFolder: '$(Build.SourcesDirectory)/app/$(Build.BuildId)/'
             cleanDestinationFolder: true
             overwriteExistingFiles: false

          - task: UseNode@1
            inputs:
             version: '16.x'
            displayName: 'Use Node.js'
          - script: sudo node $(Build.SourcesDirectory)/app/$(Build.BuildId)/server.js

        routeTraffic:
          steps:
          - script: echo routing traffic
        postRouteTraffic:
          steps:
          - script: echo health check post-route traffic
        on:
          failure:
            steps:
            - script: echo Restore from backup! This is on failure
          success:
            steps:
            - script: echo Notify! This is on success


